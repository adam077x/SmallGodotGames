[gd_scene load_steps=6 format=2]

[ext_resource path="res://Sandbox.gd" type="Script" id=1]
[ext_resource path="res://Rotator.gd" type="Script" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;

uniform vec4 out_color : hint_color = vec4(0.0, 0.2, 1.0, 1.0);
uniform float amount : hint_range(0.2, 1.5) = 0.8;

float generateOffset(float x, float z, float val1, float val2, float time) {
	float speed = 1.0;
	
	float radiansX = ((mod(x + z * x * val1, amount) / amount) + (time * speed) * mod(x * 0.8 + z, 1.5)) * 2.0 * 3.14;
	float radiansZ = ((mod(val2 * (z * x + x * z), amount) / amount) + (time * speed) * 2.0 * mod(x, 2.0)) * 2.0 * 3.14;
	
	return amount * 0.5 * (sin(radiansZ) + cos(radiansX));
}

vec3 applyDistortion(vec3 vertex, float time) {
	float xd = generateOffset(vertex.x, vertex.z, 0.2, 0.1, time);
	float yd = generateOffset(vertex.x, vertex.z, 0.1, 0.3, time);
	float zd = generateOffset(vertex.x, vertex.z, 0.15, 0.2, time);
	
	return vertex + vec3(xd, yd, zd);
}

void vertex() {
	VERTEX = applyDistortion(VERTEX, TIME * 0.1);
} 

void fragment() {
	NORMAL = normalize(cross(dFdx(VERTEX), dFdy(VERTEX)));
	METALLIC = 0.6;
	SPECULAR = 0.5;
	ROUGHNESS = 0.2;
	ALBEDO = out_color.xyz;
	
	float depth = texture(DEPTH_TEXTURE, SCREEN_UV).r;
	depth = depth * 2.0 - 1.0;
	depth = PROJECTION_MATRIX[3][2] / (depth + PROJECTION_MATRIX[2][2]);
	depth = depth + VERTEX.z;
	
	depth = exp(-depth * 0.1 );
	ALPHA = clamp(1.0 - depth, 0.0, 1.0);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/out_color = Color( 0.0823529, 0.886275, 0.917647, 1 )
shader_param/amount = 0.8

[sub_resource type="PlaneMesh" id=3]
material = SubResource( 2 )
size = Vector2( 800, 800 )
subdivide_width = 200
subdivide_depth = 200

[node name="Sandbox" type="Spatial"]
script = ExtResource( 1 )

[node name="Terrain" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -15.5155, 0 )

[node name="Rotator" type="Spatial" parent="."]
script = ExtResource( 2 )

[node name="Camera" type="Camera" parent="Rotator"]
transform = Transform( 1, 0, 0, 0, 0.954178, 0.299241, 0, -0.299241, 0.954178, 0, 88.8286, 211.732 )
far = 1000.0

[node name="DirectionalLight" type="DirectionalLight" parent="."]

[node name="Spatial" type="Spatial" parent="."]

[node name="MeshInstance" type="MeshInstance" parent="Spatial"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -55.1286, 0 )
mesh = SubResource( 3 )
material/0 = null
